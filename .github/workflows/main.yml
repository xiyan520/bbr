name: 编译 Linux 6.1.0-9-amd64 内核 (使用 BBRv3 配置)

on:
  workflow_dispatch:

jobs:
  build_kernel:
    runs-on: ubuntu-latest

    steps:
    - name: 准备环境和工具链
      run: |
        # 更新 apt 包列表 (第一次)
        sudo apt-get update

        # --- 再次尝试启用所有 deb-src 仓库 ---
        # 启用所有以 '# deb-src' 开头的行，不论后面是否有空格或其他字符紧跟
        # 这个 sed 命令更通用，会移除行首的 '# ' 或 '#' 如果后面紧跟着 'deb-src'
        sudo sed -i 's/^#\s*deb-src/deb-src/' /etc/apt/sources.list
        # 再次更新 apt 包列表以加载 deb-src 信息
        sudo apt-get update
        # -------------------------------------

        # 安装编译内核所需的大部分依赖
        # 如果上面 deb-src 启用成功且 update 正常，这一步应该能找到依赖
        sudo apt-get build-dep linux -y
        # 安装编译 .deb 包所需的额外工具
        sudo apt-get install -y fakeroot kernel-package ncurses-dev xz-utils libssl-dev build-essential cpio flex bison libelf-dev libncurses-dev libslang2-dev rsync

    - name: 克隆 Linux 内核源码 (v6.1 分支)
      run: |
        git clone https://github.com/torvalds/linux.git kernel-source
        cd kernel-source
        git checkout v6.1

    - name: 准备内核配置 (.config) 并启用 BBR
      run: |
        cd kernel-source
        make defconfig
        echo "CONFIG_TCP_CONG_BBR=y" >> .config
        echo "CONFIG_NET_SCH_FQ=y" >> .config
        make oldconfig
        grep CONFIG_TCP_CONG_BBR .config || echo "Warning: CONFIG_TCP_CONG_BBR not found or not enabled in .config"
        grep CONFIG_NET_SCH_FQ .config || echo "Warning: CONFIG_NET_SCH_FQ not found or not enabled in .config"

    - name: 编译内核和模块，生成 Debian 包
      run: |
        cd kernel-source
        export DEBEMAIL="github_actions@example.com"
        export DEBFULLNAME="GitHub Actions"
        make -j $(nproc) bindeb-pkg

    - name: 上传生成的 Debian 包
      uses: actions/upload-artifact@v4
      with:
        name: kernel-debs
        path: ../*.deb
